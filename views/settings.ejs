<html>
	<head>
		<meta name="viewport" content="width=device-width, initial-scale=1">

		<% include partials/bootstrap %>
		<% include css/general %>

		<style>
		html { 
                margin-bottom: 50px;
        }
        .box {
            padding: 5px;
            border: 1px solid black; 
            width:90%;
            min-width: 125px;
            min-height: 85;
            float:center;
            margin: 1px;
        }
        </style>
		<script type="text/javascript">
			// Check if the page is loaded and ready
			$(document).ready(function() {
				// Currently selects each of the elements with the filterSelect class name and uses jquery plug in Select2
				// to convert the select lists to searchable drop down lists
				$('select').select2();

				for (var i=1998;i<=2018;i++) {
					$("select[name=year]").append($('<option></option>').val(i).html(i));
				}

				var transportationData = <%- transportationJson; %>
                var userSettings = <%- JSON.stringify(userSettingsJson); %>
                var conversions = <%- conversionJson; %>

                var display = Object.keys(conversions.Display_Unit);
                for (var i=0;i < display.length;i++)
                {
                    $("select[name=conversion_unit]").append($('<option></option>').val(display[i]).html(display[i].split('_').join(' ')));
                }

                // Change functions to handle user actions of each of the select statements
                $("select[name=conversion_unit]").change(function(){
					var output = $('input[name=car_output]').val();
					$("input[name=conversion_factor]").val(conversions.Display_Unit[this.value]);
                    fillInOutput(output);
                });
                
				$("select[name=year]").change(function(){
					yearSelected($(this).find("option:selected").val());
				});
				
				$("select[name=make]").change(function(){
					makeSelected($("select[name=year]").find("option:selected").val(), $(this).find("option:selected").val());
				});

				$("select[name=model]").change(function(){
					modelSelected($("select[name=year]").find("option:selected").val(), $("select[name=make]").find("option:selected").val(), $(this).find("option:selected").val());
				});
				
				$("select[name=transmission]").change(function(){
					transmissionSelected($("select[name=year]").find("option:selected").val(), $("select[name=make]").find("option:selected").val(), $("select[name=model]").find("option:selected").val(), $(this).find("option:selected").val());
				});

				$("select[name=engine]").change(function(){
					engineSelected($("select[name=year]").find("option:selected").val(), $("select[name=make]").find("option:selected").val(), $("select[name=model]").find("option:selected").val(), $("select[name=transmission]").find("option:selected").val(), $(this).find("option:selected").val());
				});

				$("select[name=aspiration]").change(function(){
					aspirationSelected($("select[name=year]").find("option:selected").val(), $("select[name=make]").find("option:selected").val(), $("select[name=model]").find("option:selected").val(), $("select[name=transmission]").find("option:selected").val(), $("select[name=engine]").find("option:selected").val(),$(this).find("option:selected").val());
				});


				// Functions to handle user actions
				function yearSelected(selectedTxt){
					// Remove all the options from each of the lists
					$("select[name=make] option").remove();
					$("select[name=model] option").remove();
					$("select[name=transmission] option").remove();
					$("select[name=engine] option").remove();
					$("select[name=aspiration] option").remove();

					// Added -1 to our dummy option to avoid trying to use it to find JSON values
					if(selectedTxt != -1){
						var makes = Object.keys(transportationData.Years[selectedTxt].Makes);
						if(makes.length > 0){
							for (var i=0;i < makes.length;i++) {
								$("select[name=make]").append($('<option></option>').val(makes[i]).html(makes[i]));
							}
							// Adds a dummy option indicating the user to select a Model
							$("select[name=make]").prepend($('<option selected></option>').val("-1").html("Please select a Make"));
						}
					}

				}
				function makeSelected(year, selectedTxt){
					// Remove all options in the rest of the select lists
					$("select[name=model] option").remove();
					$("select[name=transmission] option").remove();
					$("select[name=engine] option").remove();
					$("select[name=aspiration] option").remove();
					// Added -1 to our dummy option to avoid trying to use it to find JSON values
					if(selectedTxt != -1){
						
						var models = Object.keys(transportationData.Years[year].Makes[selectedTxt].Models);
						if(models.length > 0){
							for (var i=0;i < models.length;i++)
							{
								$("select[name=model]").append($('<option></option>').val(models[i]).html(models[i]));
							}
							// Adds a dummy option indicating the user to select a Model
							$("select[name=model]").prepend($('<option selected></option>').val("-1").html("Please select a Model"));
						}
					}
				}
				function modelSelected(year, make, selectedTxt){
					// Remove all options in the remaining lists
					$("select[name=transmission] option").remove();
					$("select[name=engine] option").remove();
					$("select[name=aspiration] option").remove();
					
					

					// Added -1 to our dummy option to avoid trying to use it to find JSON values
					if(selectedTxt != -1){
						var transmissions = Object.keys(transportationData.Years[year].Makes[make].Models[selectedTxt].Transmissions);
						if(transmissions.length > 0){
							for (var i=0;i < transmissions.length;i++)
							{
								$("select[name=transmission]").append($('<option></option>').val(transmissions[i]).html(transmissions[i]));
							}
							// Adds a dummy option indicating the user to select a Model
							$("select[name=transmission]").prepend($('<option selected></option>').val("-1").html("Please select a Transmission"));
						}
					}
				}
				function transmissionSelected(year, make, model, selectedTxt){
					// Remove all the options in the remaining lists
					$("select[name=engine] option").remove();
					$("select[name=aspiration] option").remove();

					// Added -1 to our dummy option to avoid trying to use it to find JSON values
					if(selectedTxt != -1){
						var engines = Object.keys(transportationData.Years[year].Makes[make].Models[model].Transmissions[selectedTxt].Engines);
						if(engines.length > 0){
							for (var i=0;i < engines.length;i++)
							{
								$("select[name=engine]").append($('<option></option>').val(engines[i]).html(engines[i]));
							}
							// Adds a dummy option indicating the user to select a Model
							$("select[name=engine]").prepend($('<option selected></option>').val("-1").html("Please select a Engine"));
						}
					}
				}
				
				function engineSelected(year, make, model, transmission, selectedTxt){
					$("select[name=aspiration] option").remove();

					// Added -1 to our dummy option to avoid trying to use it to find JSON values
					if(selectedTxt != -1){
						if(selectedTxt == "Electric"){
                            fillInOutput((transportationData.Years[year].Makes[make].Models[model].Transmissions[transmission].Engines[selectedTxt].KwHPerMile/conversions.Display_Unit.kWh)*0.00220462);
							$("#aspirationDisp").css("display", "none");
						}else{
							$("#aspirationDisp").removeAttr("style");
							
							var aspirations = Object.keys(transportationData.Years[year].Makes[make].Models[model].Transmissions[transmission].Engines[selectedTxt].Aspirations);
							if(aspirations.length > 0){
								for (var i=0;i < aspirations.length;i++)
								{
									$("select[name=aspiration]").append($('<option></option>').val(aspirations[i]).html(aspirations[i]));
								}
								// Adds a dummy option indicating the user to select a Model
								$("select[name=aspiration]").prepend($('<option selected></option>').val("-1").html("Please select a Aspiration"));
							}
						}
					}
				}

				function aspirationSelected(year, make, model, transmission,engine, aspiration){
                    fillInOutput(transportationData.Years[year].Makes[make].Models[model].Transmissions[transmission].Engines[engine].Aspirations[aspiration].gCO2PerMile*0.00220462);
                }
                
                function fillInOutput(output){
                    var val = $("input[name=conversion_factor]").val();
					$('input[name=car_output]').val(output);
					$('label[name=carOutputLabel]').text((output*val).toFixed(2) + " " + $("select[name=conversion_unit]").find("option:selected").text());
                }

                $('#dispTransport').click(function(){
                    $("#transportOptions").slideToggle("slow");
                    changeArrows(this);
                    
                });

                $('#dispHousing').click(function(){

                    $("#houseOptions").slideToggle("slow");
                    changeArrows(this);
                });
                
                function changeArrows(arrowDisp){
                    if($(arrowDisp).hasClass("glyphicon-menu-right")){
                        $(arrowDisp).removeClass("glyphicon-menu-right");
                        $(arrowDisp).addClass("glyphicon-menu-down");
                    }else{
                        $(arrowDisp).removeClass("glyphicon-menu-down");
                        $(arrowDisp).addClass("glyphicon-menu-right");
                    }
				}
				

				// Check if the user has a car saved into the transportationDatabase
				if(userSettings.car_data.length > 0){
					$("select[name=year]").val(userSettings.car_data[0].year).change();
					$("select[name=make]").val(userSettings.car_data[0].make).change();
					$("select[name=model]").val(userSettings.car_data[0].model).change();
					$("select[name=transmission]").val(userSettings.car_data[0].transmission).change();
					$("select[name=engine]").val(userSettings.car_data[0].engine).change();				

					if(userSettings.car_data[0].engine != "Electric"){
						$("select[name=aspiration]").val(userSettings.car_data[0].aspiration).change();
					}
				}
        if(userSettings.conversion.length > 0){
            $("select[name=conversion_unit]").val(userSettings.conversion[0].conversion_unit).change();
        }

			});
		</script>
	</head>

	<body>
        <% include partials/navbar %>
        <center><h1><b>Settings</b></h1></center>
        <hr>
        <form action="/post-user-transportation-settings" method="post" id="settingsform">
            <div>
                <center>
                    <div class="form-group box">
                        <center><label class="control-label" for="conversion_id" >Conversion</label></center><br>
                        <select class="form-control" id="conversion_id" name="conversion_unit" form="settingsform" style="width:100%"></select><br>
						<input class="form-control" type="text" Readonly="readonly" style="display:none" name="conversion_factor" form="settingsform">
                        
						</div>
                    <div class="form-group box">
                        <center><i class='glyphicon glyphicon-menu-right' id="dispTransport"></i><label class="control-label" for="transportation_id">Transportation</label></center><br>
                        
                        <div id="transportOptions" style="display: none">
                            <label class="control-label transportOptions" for="year_id">Year</label><br>
                            <select class="form-control transportOptions" id="year_id" name="year" form="settingsform" style="width:100%">
                                <option value="-1">Please select a year</option>
                            </select><br>

                            <label class="control-label transportOptions" for="make_id">Make</label><br>
                            <select class="form-control transportOptions" id="make_id" name="make" form="settingsform" style="width:100%"></select><br>

                            <label class="control-label transportOptions" for="model_id">Model</label><br>				
                            <select class="form-control transportOptions" for="model_id" name="model" form="settingsform" style="width:100%"></select><br>

                            <label class="control-label transportOptions" for="transmission_id">Transmission</label><br>	
                            <select class="form-control transportOptions" id="transmission_id" name="transmission" form="settingsform" style="width:100%"></select><br>

                            <label class="control-label transportOptions" for="engine_id">Engine</label><br>
                            <select class="form-control transportOptions" for="engine_id" name="engine" form="settingsform" style="width:100%"></select><br>

                            <div id="aspirationDisp" style="display:none">
                                <label class="control-label" for="aspiration_id">Aspiration</label><br>
                                <select class="form-control" id="aspiration_id" name="aspiration" form="settingsform" style="width:100%"></select><br>	
                            </div>

                            <label class="control-label transportOptions" name="carOutputLabel">...</label>
                            <input class="form-control transportOptions" type="text" Readonly="readonly" style="display:none" name="car_output" form="settingsform">
                        </div>
                    </div>
                    
                    <div class="form-group box">
                        <center><i class='glyphicon glyphicon-menu-right' id="dispHousing"></i><label class="control-label" for="housing_id" >Housing</label></center><br>
                        <div id="houseOptions" style="display: none">

                        </div>
                    </div>
                    <br>
                    <input class="btn btn-primary" name="submit" type="submit" style="width: 50%">
                </center>
            </div>
		</form>
	</body>
</html>